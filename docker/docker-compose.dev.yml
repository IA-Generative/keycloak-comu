services:
  server:
    container_name: keycloak-comu_server
    build:
      context: ..
      dockerfile: Dockerfile
      target: dev
    depends_on:
      keycloak:
        condition: service_started
    restart: always
    ports:
    - 8080:8080
    env_file:
    - ../.env.docker
    develop:
      watch:
      - action: sync
        path: ..
        target: /app
        ignore:
        - node_modules/
      - action: rebuild
        path: package.json
    networks:
    - keycloak-comu

  keycloak:
    restart: unless-stopped
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak-comu_keycloak
    ports:
    - 8090:8080
    - 9000:9000
    volumes:
    - ../keycloak/realms:/opt/keycloak/data/import
    user: root
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://database:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME: localhost
    command: start-dev --import-realm
    healthcheck:
      test: [CMD, curl, --head, fsS, "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
    - keycloak-comu
    attach: false
    depends_on:
    - database

  database:
    image: postgres:15
    container_name: keycloak-comu_database
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
    - db-data:/var/lib/postgresql/data
    networks:
    - keycloak-comu
    ports:
    - 5432:5432

networks:
  keycloak-comu:
    driver: bridge

volumes:
  db-data:
